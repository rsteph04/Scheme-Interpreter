(begin
    (define (map func lis)
        (if (equal? lis ())
            (list)
            (cons (func (car lis)) (map func (cdr lis)))
        )
    )
    (define (filter func lis)
        (if (equal? lis (list))
            (list)
            (if (func (car lis))
                (cons (car lis) (filter func (cdr lis)))
                (filter func (cdr lis))
            )
        )  
    )
    (define (reduce func lis val1)
        (if (equal? lis (list))
            val1
            (reduce func (cdr lis) (func val1 (car lis)))
        )
    )
)
